version: "3.9"

services:

  db:
    image: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file: ./.env
    environment:
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

  web:
    build: ./web
    restart: always
    volumes:
      - ./web:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
    entrypoint: /code/entrypoint.sh
    env_file: ./.env
    environment:
      - PRODUCTION=${PRODUCTION}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECRET_KEY=${SECRET_KEY}

  celery:
    build: ./web
    restart: always
    volumes:
      - ./web:/code
    depends_on:
      - web
      - redis
      - db
    links:
      - redis:redis
    command: celery -A demo worker -l info
    env_file: ./.env
    environment:
      - PRODUCTION=${PRODUCTION}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - POSTGRES_NAME=${POSTGRES_NAME}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_HOST_USER=${EMAIL_HOST_USER}
      - EMAIL_HOST_PASSWORD=${EMAIL_HOST_PASSWORD}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - SECRET_KEY=${SECRET_KEY}

  redis:
    image: redis:alpine

  nginx:
    image: nginx
    build: ./nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./web:/code
      - ./nginx/log:/var/log/nginx
    depends_on:
      - web

volumes:
  postgres:
